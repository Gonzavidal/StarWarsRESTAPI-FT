"""empty message

Revision ID: 6dcf6145da07
Revises: 465a6400f61c
Create Date: 2023-05-25 15:37:37.021362

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6dcf6145da07'
down_revision = '465a6400f61c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('favourites_character',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('character_id')
    )
    op.create_table('favourites_planet',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('planet_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['planet_id'], ['planets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('planet_id')
    )
    op.drop_table('favorites')
    with op.batch_alter_table('characters', schema=None) as batch_op:
        batch_op.alter_column('mass',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.alter_column('height',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.alter_column('gender',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=8),
               existing_nullable=False)
        batch_op.alter_column('eye_color',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.alter_column('skin_color',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.alter_column('hair_color',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=20),
               existing_nullable=False)

    with op.batch_alter_table('planets', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.alter_column('population',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.drop_constraint('planets_climate_key', type_='unique')
        batch_op.drop_constraint('planets_diameter_key', type_='unique')
        batch_op.drop_constraint('planets_gravity_key', type_='unique')
        batch_op.drop_constraint('planets_orbital_period_key', type_='unique')
        batch_op.drop_constraint('planets_population_key', type_='unique')
        batch_op.drop_constraint('planets_rotation_period_key', type_='unique')
        batch_op.drop_constraint('planets_surface_water_key', type_='unique')
        batch_op.drop_constraint('planets_terrain_key', type_='unique')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('planets', schema=None) as batch_op:
        batch_op.create_unique_constraint('planets_terrain_key', ['terrain'])
        batch_op.create_unique_constraint('planets_surface_water_key', ['surface_water'])
        batch_op.create_unique_constraint('planets_rotation_period_key', ['rotation_period'])
        batch_op.create_unique_constraint('planets_population_key', ['population'])
        batch_op.create_unique_constraint('planets_orbital_period_key', ['orbital_period'])
        batch_op.create_unique_constraint('planets_gravity_key', ['gravity'])
        batch_op.create_unique_constraint('planets_diameter_key', ['diameter'])
        batch_op.create_unique_constraint('planets_climate_key', ['climate'])
        batch_op.alter_column('population',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    with op.batch_alter_table('characters', schema=None) as batch_op:
        batch_op.alter_column('hair_color',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
        batch_op.alter_column('skin_color',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
        batch_op.alter_column('eye_color',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
        batch_op.alter_column('gender',
               existing_type=sa.String(length=8),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
        batch_op.alter_column('height',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('mass',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    op.create_table('favorites',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('character_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('planet_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], name='favorites_character_id_fkey'),
    sa.ForeignKeyConstraint(['planet_id'], ['planets.id'], name='favorites_planet_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='favorites_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='favorites_pkey')
    )
    op.drop_table('favourites_planet')
    op.drop_table('favourites_character')
    # ### end Alembic commands ###
